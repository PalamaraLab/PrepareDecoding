name: Regression test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:

  build-and-test:
    name: Test decoding quantities can be generated
    runs-on: ubuntu-20.04
    env:
      CXX: g++-10

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: cache vcpkg installed packages
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            vcpkg/
            build_dir/vcpkg_installed/
          key: ${{ runner.os }}-${{ env.CXX }}-${{ hashFiles('vcpkg.json', 'vcpkg/CHANGELOG.md') }}

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64

      - name: install system dependencies
        run: |
          sudo apt install libgmp-dev libmpfr-dev

      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install ninja numpy cython

      - name: install python bindings
        run: |
          python -m pip install .

      - name: make build directory
        run: mkdir build_dir
        if: steps.cache.outputs.cache-hit != 'true'

      - name: compile prepare decoding
        run: |
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release
          cmake --build . --parallel 2 --target prepare_decoding_exe
        working-directory: build_dir

      - name: generate & check decoding quantities (executable)
        run: |
          bash test_prepare.sh ../../build_dir/exe/prepare_decoding_exe
        working-directory: test/regression

      - name: generate & check decoding quantities (python)
        run: |
          bash test_prepare_python.sh
        working-directory: test/regression
