name: Unit test coverage

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:

  build-and-test:
    name: Unit test coverage
    runs-on: ubuntu-20.04
    env:
      CXX: g++-10

    steps:

      - name: checkout repo & vcpkg submodule
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: cache vcpkg installed packages
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            vcpkg/
            build_dir/vcpkg_installed/
          key: ${{ runner.os }}-${{ env.CXX }}-${{ hashFiles('vcpkg.json', 'vcpkg/CHANGELOG.md') }}

      - name: install tools
        run: |
          sudo apt -y update
          sudo apt -y install g++-10 lcov libcurl4-openssl-dev

      - name: make build directory
        run: mkdir build_dir
        if: steps.cache.outputs.cache-hit != 'true'

      - name: run unit tests with coverage
        run: |
          cmake .. -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON
          cmake --build . --parallel 2 --target unit_tests
          ctest -j2 --output-on-failure
        working-directory: build_dir

      - name: upload coverage results
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/vcpkg/*' '*/test/*' --output-file coverage.info
          lcov --list coverage.info
          bash <(curl https://codecov.io/bash) -f coverage.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        working-directory: build_dir
